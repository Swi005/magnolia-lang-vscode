{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "Magnolia",
	"patterns": [
		{
			"include": "#keywords"
		},
		{
			"include": "#line-comment"
		},
		{
			"include": "#block-comment"
		}

	],
	"repository": {
		"keywords": {
			"patterns": [{
				"name": "keyword.control.mg",
				"match": "\\b(package|imports|program|implementation|signature|concept|satisfaction|models|morphism|protect|times|union|retain|define|hide|reveal|requires|require|requires|approximates|extend|defines|external|with|on|by|use|value|alert|alerts|leave|leaves|precond|throw|throws|handler|unless|pre|post|invariant|assert|throwing|predicate|procedure|function|axiom|theorem|proof|class|type|struct|default|override|guard|call|const|var|assert|open|new|preserve|generate|free|initial|partition|renaming|homomorphism|datainvariant|subalgebra|congruence|quotient|full|declared|rule|transform|forall|exists|name|skip|FALSE|TRUE|recover|obs|upd|out|del|giv|nrm|expr|break|case|continue|default|do|ifelse|else|for|if|then|end|let|return|switch|while|repeat|along|from|in)\\b"
			}]
		},
		"line-comment": {
			"patterns": [
				{
				"name": "comment.line.mg",
				"match": "//.*"	
				},
				{
					"name": "leading.doccomment.line.mg",
					"match": "//>.*"	
				},
				{
					"name": "trailing.doccomment.line.mg",
					"match": "//^.*"	
				}
			]
		},
		"block-comment": {
            "patterns": [
                {
                    "name": "comment.block.documentation",
                    "begin": "(?x) / \\* \\*",
                    "end": "(?x) \\* /"
                },
                {
                    "name": "comment.block",
                    "begin": "(?x) / \\*",
                    "end": "(?x) \\* /"
                },
				{
                    "name": "doc.comment.block",
                    "begin": "(?x) / \\**",
                    "end": "(?x) \\* /"
                }]}

	},
	"scopeName": "source.magnolia"
}
